// Internal Dependencies
import {WebexPlugin} from '@webex/webex-core';

const Devices = WebexPlugin.extend({

  // Ampersand property members.

  namespace: 'Devices',

  // Allow for extra properties to prevent the plugin from failing due to
  // **WDM** service DTO changes.
  extraProperties: 'allow',

  children: {
    // Child FeatureModel will be implemented here in a later pull request.
  },

  props: {
    // The devices properties from the **WDM** DTO will be implemented here
    // in a later pull request.
  },

  derived: {
    // The `registered` derived property will be implemented here in a later
    // pull request.
  },

  session: {
    // Device session properties will be implemented here in a later pull
    // request.
  },

  // Event method members

  meetingStarted() {}, // Handles triggering meeting started events.
  meetingEnded() {}, // Handles triggering meeting ended events.

  // Registration method members

  refresh() {}, // Refreshes the device's registration.
  register() {}, // Registers a device.
  unregister() {}, // Unregisters the device.

  // Helper method members

  canRegister() {}, // Validates if the device can register
  checkNetworkReachability() {}, // Checks for internal network reachability.
  clear() {}, // Selectively clears the device.
  getWebSocketUrl() {}, // Retrieves the priority-mapped web socket url.
  processRegistrationSuccess() {}, // Handles post-registration data mapping.
  resetLogoutTimer() {}, // Resets the logout timer for ephemeral devices.
  setLogoutTimer() {}, // Sets the logout timer for ephemeral devices.
  waitForRegistration() {}, // Eventing method queue actions after registration.

  // Ampersand method members

  initialize() {} // Sets up the plugin as well as its events.
});

export default Devices;
